<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">

    <!-- LinearLayout is chosen because:

            1) the number of views is limited to 3, and will not be increased later
            3) all the views should be positioned only vertically to each other
            4) the whole layout should be centered, which is easy to achieve with "android:gravity" attribute

        ~ Based on architecture components samples: NavigationBasicSample project, a similar layout was implemented using ConstraintLayout
        ~ https://github.com/android/architecture-components-samples/blob/master/NavigationBasicSample/app/src/main/res/layout/fragment_title_screen.xml
        ~ I followed this approach as well for another screen -> fragment_instructions.xml, which is absolutely identical by its structure to this screen.

        ~ Conclusion:
            1) in this particular case, both of the approaches are acceptable, since the number of elements is very limited;
            2) for the sake of experiment and comparison I stick to using different approaches.-->

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/colorLight"
        android:gravity="center"
        android:orientation="vertical">

        <ImageView
            android:id="@+id/wel_image"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:contentDescription="@string/cont_desc_logo"
            android:src="@drawable/ic_logo" />

        <TextView
            android:id="@+id/wel_txt"
            style="@style/OnboardingTitleStyle.WelcomeTitle"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/welcome_title" />

        <TextView
            android:id="@+id/wel_sub_txt"
            style="@style/OnboardingMessageStyle.WelcomeMessage"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/welcome_text" />

        <com.google.android.material.button.MaterialButton
            android:id="@+id/wel_btn"
            style="@style/ButtonGetStartedStyle.WelcomeButton"
            android:layout_width="@dimen/button_onboarding_width"
            android:layout_height="wrap_content"
            android:text="@string/welcome_button" />
    </LinearLayout>
</layout>